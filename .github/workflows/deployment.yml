name: Deploy to GKE

on: push

env:
  IMAGE_NAME: ghcr.io/shradhasaxena129/myapp/myimage:latest
  GKE_PROJECT: ci-cd-demo-part2
  GKE_CLUSTER: cluster-1
  GKE_NAMESPACE: your-gke-namespace
  KUBECONFIG: ${{ secrets.GKE_KUBECONFIG }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login ghcr.io -u $DOCKER_USERNAME --password-stdin
          docker build --tag $IMAGE_NAME .
          docker push $IMAGE_NAME
## Deployment
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.5.0
        with:
          version: 'latest'
          service_account_key: ${{ secrets.GKE_SA_KEY }}

      - name: Configure kubectl
        run: |
          echo "$KUBECONFIG" > kubeconfig.yaml
          export KUBECONFIG=$(pwd)/kubeconfig.yaml
          gcloud auth activate-service-account --key-file=kubeconfig.yaml
          gcloud container clusters get-credentials $GKE_CLUSTER --project $GKE_PROJECT --zone us-central1
      #      - name: Configure kubectl
#        run: |
#          echo "$KUBECONFIG" | base64 --decode > kubeconfig.yaml
#          export KUBECONFIG=$(pwd)/kubeconfig.yaml
#          gcloud auth activate-service-account --key-file=kubeconfig.yaml
#          gcloud container clusters get-credentials $GKE_CLUSTER --project $GKE_PROJECT --zone us-central1

      - name: Deploy to GKE
        run: |
          kubectl apply -f path/to/your/deployment.yaml --namespace $GKE_NAMESPACE
